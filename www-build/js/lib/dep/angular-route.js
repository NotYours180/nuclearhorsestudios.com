!function(window,angular){function inherit(parent,extra){return extend(new(extend(function(){},{prototype:parent})),extra)}function $RouteProvider(){function pathRegExp(path,opts){var insensitive=opts.caseInsensitiveMatch,ret={originalPath:path,regexp:path},keys=ret.keys=[];return path=path.replace(/([().])/g,"\\$1").replace(/(\/)?:(\w+)([\?|\*])?/g,function(_,slash,key,option){var optional="?"===option?option:null,star="*"===option?option:null;return keys.push({name:key,optional:!!optional}),slash=slash||"",""+(optional?"":slash)+"(?:"+(optional?slash:"")+(star&&"(.+)?"||"([^/]+)?")+")"+(optional||"")}).replace(/([\/$\*])/g,"\\$1"),ret.regexp=new RegExp("^"+path+"$",insensitive?"i":""),ret}var routes={};this.when=function(path,route){if(routes[path]=extend({reloadOnSearch:!0},route,path&&pathRegExp(path,route)),path){var redirectPath="/"==path[path.length-1]?path.substr(0,path.length-1):path+"/";routes[redirectPath]=extend({redirectTo:path},pathRegExp(redirectPath,route))}return this},this.otherwise=function(params){return this.when(null,params),this},this.$get=["$rootScope","$location","$routeParams","$q","$injector","$http","$templateCache","$sce",function($rootScope,$location,$routeParams,$q,$injector,$http,$templateCache,$sce){function switchRouteMatcher(on,route){var keys=route.keys,params={};if(!route.regexp)return null;var m=route.regexp.exec(on);if(!m)return null;for(var i=1,len=m.length;len>i;++i){var key=keys[i-1],val="string"==typeof m[i]?decodeURIComponent(m[i]):m[i];key&&val&&(params[key.name]=val)}return params}function updateRoute(){var next=parseRoute(),last=$route.current;next&&last&&next.$$route===last.$$route&&equals(next.pathParams,last.pathParams)&&!next.reloadOnSearch&&!forceReload?(last.params=next.params,copy(last.params,$routeParams),$rootScope.$broadcast("$routeUpdate",last)):(next||last)&&(forceReload=!1,$rootScope.$broadcast("$routeChangeStart",next,last),$route.current=next,next&&next.redirectTo&&(isString(next.redirectTo)?$location.path(interpolate(next.redirectTo,next.params)).search(next.params).replace():$location.url(next.redirectTo(next.pathParams,$location.path(),$location.search())).replace()),$q.when(next).then(function(){if(next){var template,templateUrl,locals=extend({},next.resolve);return forEach(locals,function(value,key){locals[key]=isString(value)?$injector.get(value):$injector.invoke(value)}),isDefined(template=next.template)?isFunction(template)&&(template=template(next.params)):isDefined(templateUrl=next.templateUrl)&&(isFunction(templateUrl)&&(templateUrl=templateUrl(next.params)),templateUrl=$sce.getTrustedResourceUrl(templateUrl),isDefined(templateUrl)&&(next.loadedTemplateUrl=templateUrl,template=$http.get(templateUrl,{cache:$templateCache}).then(function(response){return response.data}))),isDefined(template)&&(locals.$template=template),$q.all(locals)}}).then(function(locals){next==$route.current&&(next&&(next.locals=locals,copy(next.params,$routeParams)),$rootScope.$broadcast("$routeChangeSuccess",next,last))},function(error){next==$route.current&&$rootScope.$broadcast("$routeChangeError",next,last,error)}))}function parseRoute(){var params,match;return forEach(routes,function(route){!match&&(params=switchRouteMatcher($location.path(),route))&&(match=inherit(route,{params:extend({},$location.search(),params),pathParams:params}),match.$$route=route)}),match||routes[null]&&inherit(routes[null],{params:{},pathParams:{}})}function interpolate(string,params){var result=[];return forEach((string||"").split(":"),function(segment,i){if(0===i)result.push(segment);else{var segmentMatch=segment.match(/(\w+)(.*)/),key=segmentMatch[1];result.push(params[key]),result.push(segmentMatch[2]||""),delete params[key]}}),result.join("")}var forceReload=!1,$route={routes:routes,reload:function(){forceReload=!0,$rootScope.$evalAsync(updateRoute)}};return $rootScope.$on("$locationChangeSuccess",updateRoute),$route}]}function $RouteParamsProvider(){this.$get=function(){return{}}}function ngViewFactory($route,$anchorScroll,$compile,$controller,$animate){return{restrict:"ECA",terminal:!0,priority:1e3,transclude:"element",compile:function(element,attr,linker){return function(scope,$element,attr){function cleanupLastView(){currentScope&&(currentScope.$destroy(),currentScope=null),currentElement&&($animate.leave(currentElement),currentElement=null)}function update(){var locals=$route.current&&$route.current.locals,template=locals&&locals.$template;if(template){var newScope=scope.$new();linker(newScope,function(clone){cleanupLastView(),clone.html(template),$animate.enter(clone,null,$element);var link=$compile(clone.contents()),current=$route.current;if(currentScope=current.scope=newScope,currentElement=clone,current.controller){locals.$scope=currentScope;var controller=$controller(current.controller,locals);current.controllerAs&&(currentScope[current.controllerAs]=controller),clone.data("$ngControllerController",controller),clone.contents().data("$ngControllerController",controller)}link(currentScope),currentScope.$emit("$viewContentLoaded"),currentScope.$eval(onloadExp),$anchorScroll()})}else cleanupLastView()}var currentScope,currentElement,onloadExp=attr.onload||"";scope.$on("$routeChangeSuccess",update),update()}}}}var copy=angular.copy,equals=angular.equals,extend=angular.extend,forEach=angular.forEach,isDefined=angular.isDefined,isFunction=angular.isFunction,isString=angular.isString;angular.element,angular.noop,angular.toJson;var ngRouteModule=angular.module("ngRoute",["ng"]).provider("$route",$RouteProvider);ngRouteModule.provider("$routeParams",$RouteParamsProvider),ngRouteModule.directive("ngView",ngViewFactory),ngViewFactory.$inject=["$route","$anchorScroll","$compile","$controller","$animate"]}(window,window.angular);